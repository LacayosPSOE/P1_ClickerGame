local counter = 0
local playback = go.PLAYBACK_ONCE_FORWARD
local easing = go.EASING_LINEAR
local complete_function = nil
go.property("duration", 0.5)
go.property("delay", 0)
go.property("from_scale_animation", 1)
go.property("to_scale_animation", 0.8)


function init(self)
	msg.post(".", "acquire_input_focus")
	counter = 0
	msg.post("text_controller", "update_text", { count = counter })
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		local buttonPos = go.get_position()
		local buttonSize = go.get("#sprite", "size")

		local minX = buttonPos.x - buttonSize.x / 2
		local maxX = buttonPos.x + buttonSize.x / 2
		local minY = buttonPos.y - buttonSize.y / 2
		local maxY = buttonPos.y + buttonSize.y / 2

		if action.x >= minX and action.x <= maxX and action.y >= minY and action.y <= maxY then
			increment_counter(self, 1)
		end
	end
end

function spawnPigeon()
	local screenWidth = tonumber(sys.get_config("display.width"))
	local screenHeight = tonumber(sys.get_config("display.height"))

	local randomX = math.random(0, screenWidth)
	local randomY = math.random(0, screenHeight)
	local randomPosition = vmath.vector3(randomX, randomY, 0)

	sound.play("#spawn")
	factory.create("#pigeonFactory", randomPosition, nil, nil, 1)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("pigeon_click") then
		increment_counter(self, message.value)
	end
end

function increment_counter(self, value)
	sound.play("#click")
	go.animate("#sprite", "scale", playback, vmath.vector3(self.to_scale_animation, self.to_scale_animation, 1), easing,
		self.duration, self.delay, function()
			go.animate("#sprite", "scale", playback,
				vmath.vector3(self.from_scale_animation, self.from_scale_animation, 1), easing, self.duration,
				self.delay)
		end)
	counter = counter + value
	msg.post("text_controller", "update_text", { count = counter })
	msg.post("percentage_controller", "increment_counter", { value = 1 })

	if counter % 10 == 0 then
		spawnPigeon()
	end
end
